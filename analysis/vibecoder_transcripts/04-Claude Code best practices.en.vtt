WEBVTT
Kind: captions
Language: en

00:00:05.760 --> 00:00:13.440
Let's get started. Welcome everyone to Cloud&nbsp;
Code best practices. In this talk, I'm going&nbsp;&nbsp;

00:00:13.440 --> 00:00:19.440
to talk about kind of what cloud code is at a high&nbsp;
level. Then we'll peer under the hood a little bit&nbsp;&nbsp;

00:00:19.440 --> 00:00:24.720
to kind of understand how cloud code works. And&nbsp;
then knowing that because it's useful to kind of&nbsp;&nbsp;

00:00:24.720 --> 00:00:29.520
know how your tools work. We're going to talk&nbsp;
about good use cases for cloud code and also&nbsp;&nbsp;

00:00:29.520 --> 00:00:36.640
best practices we've figured out both internally&nbsp;
and from our users uh for getting the most out of&nbsp;&nbsp;

00:00:36.640 --> 00:00:41.520
this tool. Uh but before I get started, I'd like&nbsp;
to introduce myself real quick and talk about how&nbsp;&nbsp;

00:00:41.520 --> 00:00:48.080
I ended up on the stage. So, my name's Cal and&nbsp;
I joined Enthropic about a year and a half ago&nbsp;&nbsp;

00:00:48.080 --> 00:00:53.920
uh to help start up a team we call applied&nbsp;
AI. And it's the applied AI's kind of mission,&nbsp;&nbsp;

00:00:53.920 --> 00:00:58.880
our team's mission is to help our customers and&nbsp;
partners build great products and features on&nbsp;&nbsp;

00:00:58.880 --> 00:01:04.960
top of Claude. So what that really means is&nbsp;
I spend a lot of my day prompting Claude to&nbsp;&nbsp;

00:01:04.960 --> 00:01:10.640
get the absolute best outputs out of these&nbsp;
models. That said, I also love to code and&nbsp;&nbsp;

00:01:10.640 --> 00:01:15.200
I'm definitely one of those coders that like&nbsp;
starts a lot of projects, has some crazy idea,&nbsp;&nbsp;

00:01:15.200 --> 00:01:19.680
and then just never finishes them. So, I have&nbsp;
this graveyard of just like code that I started,&nbsp;&nbsp;

00:01:19.680 --> 00:01:24.080
never really finished. Um, but I'm always&nbsp;
spinning new things up. And late last year,&nbsp;&nbsp;

00:01:24.080 --> 00:01:28.160
I was in Slack and I was hearing about this new&nbsp;
tool that a few people are using. They were saying&nbsp;&nbsp;

00:01:28.160 --> 00:01:33.840
it was really cool. And so, on a Friday night, I&nbsp;
downloaded the tool that would become Cloud Code.&nbsp;&nbsp;

00:01:33.840 --> 00:01:38.800
And I threw it at this kind of new notetaking&nbsp;
app that I wanted to build. And like that whole&nbsp;&nbsp;

00:01:38.800 --> 00:01:44.080
weekend just kind of totally changed the way that&nbsp;
I code and think about software engineering. I was&nbsp;&nbsp;

00:01:44.080 --> 00:01:48.880
carrying around my laptop with me all weekend. I&nbsp;
was super addicted to just watching Claude Code&nbsp;&nbsp;

00:01:48.880 --> 00:01:54.880
work and I would press enter and I'd switch over&nbsp;
to my browser and refresh and I watched this huge&nbsp;&nbsp;

00:01:54.880 --> 00:02:00.240
powerful application come together in front of my&nbsp;
eyes. And I got way farther into this thing than&nbsp;&nbsp;

00:02:00.240 --> 00:02:05.520
I ever would have on my own. And it just blew my&nbsp;
mind. And while I was doing this, I was a little&nbsp;&nbsp;

00:02:05.520 --> 00:02:09.040
worried. I was like, you know, I you know, I kind&nbsp;
of know how these things work. So I'm like, man,&nbsp;&nbsp;

00:02:09.040 --> 00:02:13.760
I'm using a lot of tokens. I hope I don't get in&nbsp;
trouble or anyone like notices. I'm not really&nbsp;&nbsp;

00:02:13.760 --> 00:02:18.880
contributing to anthropic code. Um, but what&nbsp;
I didn't know is that the claude code team had&nbsp;&nbsp;

00:02:18.880 --> 00:02:24.480
built this internal like leaderboard tracking&nbsp;
how much all the anthropic employees were using&nbsp;&nbsp;

00:02:24.480 --> 00:02:29.840
this. And over the weekend, I had shot to the&nbsp;
top. And so through that, I got to meet Boris&nbsp;&nbsp;

00:02:29.840 --> 00:02:34.880
and Cat and some of the early cloud code team.&nbsp;
And I was able to start talking to them and say,&nbsp;&nbsp;

00:02:34.880 --> 00:02:40.800
"Hey, I love this tool. I also know a lot about&nbsp;
prompting. Can I help you all out?" And so through&nbsp;&nbsp;

00:02:40.800 --> 00:02:46.720
that I got involved and now I'm one of the core&nbsp;
contributors on the team and I do a lot of I work&nbsp;&nbsp;

00:02:46.720 --> 00:02:52.000
a lot on the prompting the system prompts how the&nbsp;
tools work the tool descriptions and tool results&nbsp;&nbsp;

00:02:52.000 --> 00:02:56.960
as well as I work on how we evaluate this tool.&nbsp;
So when we think about changing the prompts how&nbsp;&nbsp;

00:02:56.960 --> 00:03:02.880
do we make how do we know we made things better or&nbsp;
the same and we didn't totally ruin cloud code. So&nbsp;&nbsp;

00:03:02.880 --> 00:03:08.960
with that said let's kind of dive in. So, here's&nbsp;
my current mental model of Claude Code and how I&nbsp;&nbsp;

00:03:08.960 --> 00:03:16.400
describe it to people when people ask me. Claude&nbsp;
Code is like that co-worker that does everything&nbsp;&nbsp;

00:03:16.400 --> 00:03:21.760
on the terminal. It's the sort of person that just&nbsp;
never touches the guey. They're a whiz. I think&nbsp;&nbsp;

00:03:21.760 --> 00:03:26.960
of when I was a junior engineer, I had this mentor&nbsp;
and I would walk over to his desk and I would say,&nbsp;&nbsp;

00:03:26.960 --> 00:03:31.600
"Hey, Tony, can you help me with this bug?" and&nbsp;
he would whipping it open his terminal and he'd&nbsp;&nbsp;

00:03:31.600 --> 00:03:35.280
be like doing all these crazy bash commands&nbsp;
and changing things around in Vim and I'd&nbsp;&nbsp;

00:03:35.280 --> 00:03:41.440
always walk away thinking, "Wow, that was crazy.&nbsp;
I should learn how to do that." Um, I never did.&nbsp;&nbsp;

00:03:41.440 --> 00:03:49.760
But having Claude Code on your computer is kind&nbsp;
of like having Tony next to you all the time.

00:03:49.760 --> 00:03:58.480
So, how does Claude code kind of work under the&nbsp;
hood? At Anthropic, we try to always do what&nbsp;&nbsp;

00:03:58.480 --> 00:04:03.920
we call the simple thing that works. And what&nbsp;
that means for Cloud Code is it's what we would&nbsp;&nbsp;

00:04:03.920 --> 00:04:11.440
consider a very pure agent. And anthropic, when&nbsp;
we talk about agents, what we really mean is some&nbsp;&nbsp;

00:04:11.440 --> 00:04:17.440
instructions, some powerful tools, and you let&nbsp;
the model just run in a loop until it decides it's&nbsp;&nbsp;

00:04:17.440 --> 00:04:24.720
done. And that's really what Cloud Code is. So&nbsp;
it's tools, powerful tools, and the tools that you&nbsp;&nbsp;

00:04:24.720 --> 00:04:28.640
know someone that was really good at a terminal&nbsp;
would be able to use tools to create and edit&nbsp;&nbsp;

00:04:28.640 --> 00:04:35.600
files to use the terminal. And then you can also&nbsp;
do things like pull in other things with MCP. Now,&nbsp;&nbsp;

00:04:35.600 --> 00:04:42.080
on top of that, there's how Claude understands&nbsp;
the codebase. And if you're going to build a&nbsp;&nbsp;

00:04:42.080 --> 00:04:47.840
coding agent or a coding tool a year ago, you'd&nbsp;
probably have ideas like, well, okay, I'm going to&nbsp;&nbsp;

00:04:47.840 --> 00:04:52.720
get this user message about something about this&nbsp;
codebase and I'll need to figure out which files&nbsp;&nbsp;

00:04:52.720 --> 00:04:58.160
are relevant. So maybe I'll like index the whole&nbsp;
codebase and embed it and do this fancy like kind&nbsp;&nbsp;

00:04:58.160 --> 00:05:04.720
of rag retrieval thing. That is not how cloud code&nbsp;
works. We don't do any sort of indexing. Instead,&nbsp;&nbsp;

00:05:04.720 --> 00:05:10.720
claude kind of explores and understands the&nbsp;
codebase. how you if you were new to a team&nbsp;&nbsp;

00:05:10.720 --> 00:05:16.080
and new to a codebase would explore a codebase&nbsp;
and that is through a gentic search is the same&nbsp;&nbsp;

00:05:16.080 --> 00:05:21.600
sort of search tools you or I would use things&nbsp;
like glob and gp and find and it can work its way&nbsp;&nbsp;

00:05:21.600 --> 00:05:27.040
through a codebase and understand what's going on&nbsp;
and when we talk about a gentic search that really&nbsp;&nbsp;

00:05:27.040 --> 00:05:32.720
means the model can go do some searches and then&nbsp;
it can look at the results and can say hm maybe I&nbsp;&nbsp;

00:05:32.720 --> 00:05:37.920
need to figure out a few more things I'm going to&nbsp;
go do some more searching and then come back and&nbsp;&nbsp;

00:05:37.920 --> 00:05:43.120
then on top of these primitives. On top of this&nbsp;
agent, we have a few things. We have a very nice&nbsp;&nbsp;

00:05:43.120 --> 00:05:48.960
light UI layer where you get to watch Claude&nbsp;
code work. You see all the text fly by and we&nbsp;&nbsp;

00:05:48.960 --> 00:05:54.800
have this nice permission system that allows the&nbsp;
agent to work and allows and kind of forces the&nbsp;&nbsp;

00:05:54.800 --> 00:06:00.160
human to butt in when the agent is doing something&nbsp;
dangerous. And then on top of that, we also care a&nbsp;&nbsp;

00:06:00.160 --> 00:06:06.400
lot about security in this tool. And so because&nbsp;
quad code is just such a lightweight kind of&nbsp;&nbsp;

00:06:06.400 --> 00:06:12.160
layer on top of the model and the fact that our&nbsp;
model is available not just behind anthropic APIs&nbsp;&nbsp;

00:06:12.160 --> 00:06:19.440
but also with our cloud providers AWS and GCP it's&nbsp;
very easy and native to point cloud code at one of&nbsp;&nbsp;

00:06:19.440 --> 00:06:27.600
these other services if you feel more comfortable&nbsp;
consuming cloud that way. Now a lot of people ask&nbsp;&nbsp;

00:06:27.600 --> 00:06:33.760
me hey Cal what can I use cloud code for? Like&nbsp;
what is it good at? where is it interesting? And&nbsp;&nbsp;

00:06:33.760 --> 00:06:42.000
the reality is it's kind of great at everything.&nbsp;
So let's start with discovery. Often times in your&nbsp;&nbsp;

00:06:42.000 --> 00:06:47.280
career, you will be dropped into a new codebase.&nbsp;
Whether that means you're switching teams,&nbsp;&nbsp;

00:06:47.280 --> 00:06:50.480
you're switching companies, I don't know,&nbsp;
you're starting to work on some sort of&nbsp;&nbsp;

00:06:50.480 --> 00:06:54.480
open source project. And probably when you're&nbsp;
first getting started and getting familiar,&nbsp;&nbsp;

00:06:54.480 --> 00:06:57.920
you're not very productive because you're just&nbsp;
trying to figure out where things are in the&nbsp;&nbsp;

00:06:57.920 --> 00:07:03.200
codebase, what patterns kind of the team is using,&nbsp;
things like that. And Claude code can kind of help&nbsp;&nbsp;

00:07:03.200 --> 00:07:09.360
supercharge that onboarding process. You can ask&nbsp;
claude, hey, where is this feature implemented?&nbsp;&nbsp;

00:07:09.360 --> 00:07:13.760
Or since it's great at the terminal, you can&nbsp;
say, hey, look at this file and look at the git&nbsp;&nbsp;

00:07:13.760 --> 00:07:19.360
history and just kind of tell me a story about how&nbsp;
this code has changed over the past couple weeks.&nbsp;&nbsp;

00:07:20.400 --> 00:07:25.440
One thing you can use cloud code for, and I think&nbsp;
this is underrated, is instead of just diving in&nbsp;&nbsp;

00:07:25.440 --> 00:07:30.160
and starting to work, you can use cloud code as a&nbsp;
thought partner. So oftent times when I'm working&nbsp;&nbsp;

00:07:30.160 --> 00:07:34.640
with Claude and I want to implement a feature or&nbsp;
we're going to change something up, I'll open up&nbsp;&nbsp;

00:07:34.640 --> 00:07:38.960
Claude and I'll say, "Hey Claude, you know,&nbsp;
I'm thinking about implementing this feature,&nbsp;&nbsp;

00:07:38.960 --> 00:07:43.120
can you just kind of like search around and kind&nbsp;
of figure out how we would do it and maybe report&nbsp;&nbsp;

00:07:43.120 --> 00:07:47.600
back with like two or three different options.&nbsp;
Don't start working. don't start writing any&nbsp;&nbsp;

00:07:47.600 --> 00:07:52.480
files writing any files yet and claude will go&nbsp;
off and use those agentic search capabilities&nbsp;&nbsp;

00:07:52.480 --> 00:07:57.920
and come back with a few ideas and then I could&nbsp;
work with claude to kind of validate things and&nbsp;&nbsp;

00:07:57.920 --> 00:08:04.480
then we can jump into the project of course cloud&nbsp;
code is great at building and writing code and&nbsp;&nbsp;

00:08:04.480 --> 00:08:09.600
I would say this in on two different fronts one&nbsp;
it can do the zero to one sort of stuff you drop&nbsp;&nbsp;

00:08:09.600 --> 00:08:14.800
it in an empty directory and you say hey build me&nbsp;
an app build me a game that demos where very well&nbsp;&nbsp;

00:08:14.800 --> 00:08:20.240
it's very fun to do it's very grat gratifying.&nbsp;
Of course, in reality, what really matters is is&nbsp;&nbsp;

00:08:20.240 --> 00:08:27.840
cloud code good working in existing code bases.&nbsp;
And this is primarily what we focus on. Um,&nbsp;&nbsp;

00:08:27.840 --> 00:08:34.800
on the cloud code team, we have in our codebase&nbsp;
abnormally high, I would say, unit test coverage.&nbsp;&nbsp;

00:08:34.800 --> 00:08:41.920
And that's because cloud code makes it so easy&nbsp;
and just straightforward to add unit tests. So, we&nbsp;&nbsp;

00:08:41.920 --> 00:08:46.000
have great code coverage. And then the other thing&nbsp;
we have in cloud code in our own codebase is we&nbsp;&nbsp;

00:08:46.000 --> 00:08:50.720
have great commits and PR messages because when we&nbsp;
finish working we'll just say hey cloud write the&nbsp;&nbsp;

00:08:50.720 --> 00:08:58.400
commit for me write the PR message for me. We also&nbsp;
see great opportunities to use cloud code in kind&nbsp;&nbsp;

00:08:58.400 --> 00:09:04.160
of the deployment like deployments and in other&nbsp;
parts of the life cycle. And this is a few other&nbsp;&nbsp;

00:09:04.160 --> 00:09:09.840
people have talked about this but this is using&nbsp;
the cloud code SDK. So using it headlessly, using&nbsp;&nbsp;

00:09:09.840 --> 00:09:17.280
it programmatically, being able to sprinkle in a&nbsp;
coding agent agent anywhere. And so that's things&nbsp;&nbsp;

00:09:17.280 --> 00:09:24.800
like sprinkling it into CI/CD to use it in GitHub&nbsp;
for instance to help people um programmatically.&nbsp;&nbsp;

00:09:24.800 --> 00:09:30.480
And then finally, it's great kind of with support&nbsp;
and scale. It can help you debug errors faster.&nbsp;&nbsp;

00:09:30.480 --> 00:09:35.520
One thing that we saw when we started giving cloud&nbsp;
code to customers and talking to them about it,&nbsp;&nbsp;

00:09:35.520 --> 00:09:40.000
we didn't totally predict this was a lot of&nbsp;
customers or potential customers said, "Hey,&nbsp;&nbsp;

00:09:40.000 --> 00:09:44.960
we've been me we've been kind of putting off this&nbsp;
like large codebase migration. People that are on&nbsp;&nbsp;

00:09:44.960 --> 00:09:50.480
old versions of Java trying to get to a new one&nbsp;
or a team that's on PHP and they're trying to&nbsp;&nbsp;

00:09:50.480 --> 00:09:56.160
get to React or Angular. We've talked to multiple&nbsp;
teams like this and having a tool like Cloud Code&nbsp;&nbsp;

00:09:56.160 --> 00:10:00.320
makes projects like that a little more digestible.&nbsp;
when you go to your team and you say, "Hey, we're&nbsp;&nbsp;

00:10:00.320 --> 00:10:07.200
going to spend a month, you know, refactoring or&nbsp;
rewriting large parts of the codebase." And then&nbsp;&nbsp;

00:10:07.200 --> 00:10:12.480
on top of that, and this kind of matters across&nbsp;
all these, is once again remember Claude is great&nbsp;&nbsp;

00:10:12.480 --> 00:10:17.280
at the terminal. And that means it's going&nbsp;
to be great at all those different CLI tools,&nbsp;&nbsp;

00:10:17.280 --> 00:10:22.560
things like Git, Docker, Big Query, things like&nbsp;
that. I never have to worry about, oh, I'm going&nbsp;&nbsp;

00:10:22.560 --> 00:10:27.840
to get myself, how do I get myself out of this&nbsp;
sticky rebase? I'll just fire up cloud code and&nbsp;&nbsp;

00:10:27.840 --> 00:10:34.000
tell it the situation and be like, "Hey, can you&nbsp;
fix this for me?" It's incredible. Now, let's&nbsp;&nbsp;

00:10:34.000 --> 00:10:41.120
talk about best practices. And the first one is&nbsp;
not going to be a surprise, but the first one is&nbsp;&nbsp;

00:10:41.120 --> 00:10:48.800
use claw.md files. So, remember that cloud code,&nbsp;
like I said, is an agent and it has some tools,&nbsp;&nbsp;

00:10:48.800 --> 00:10:54.240
has some lightweight instructions in the prompt,&nbsp;
but it doesn't really have memory. And so the main&nbsp;&nbsp;

00:10:54.240 --> 00:11:00.240
way we share state across kind of sessions&nbsp;
or across our team when we fire up cla code&nbsp;&nbsp;

00:11:00.240 --> 00:11:07.040
in the same codebase over and over again is this&nbsp;
cloud.mmd file. So when we start cla what happens&nbsp;&nbsp;

00:11:07.040 --> 00:11:12.080
is if there's this claw.md file in the working&nbsp;
directory it's just plopped into context. It's&nbsp;&nbsp;

00:11:12.080 --> 00:11:16.640
plopped into the prompt. And basically what it&nbsp;
says is hey claude by the way these are important&nbsp;&nbsp;

00:11:16.640 --> 00:11:22.160
instructions the developer left for you. Be&nbsp;
sure to pay close attention to this. And there's&nbsp;&nbsp;

00:11:22.160 --> 00:11:27.040
various places you can put the cloudmd file. You&nbsp;
can put it in a project and check it in so all&nbsp;&nbsp;

00:11:27.040 --> 00:11:31.040
your teammates share it. You could put one in your&nbsp;
home directory if there's things you just want&nbsp;&nbsp;

00:11:31.040 --> 00:11:35.600
claude to always know about regardless of what&nbsp;
you're working on. And the things you put in here&nbsp;&nbsp;

00:11:35.600 --> 00:11:41.440
are things like, hey, by the way, maybe this is&nbsp;
how you run the unit tests. Or just so you know,&nbsp;&nbsp;

00:11:41.440 --> 00:11:46.320
to make kind of your searching and life easier,&nbsp;
here's like just like an overview of kind of how&nbsp;&nbsp;

00:11:46.320 --> 00:11:51.280
this project is laid out, where the tests live,&nbsp;
what different modules are, things like that.&nbsp;&nbsp;

00:11:51.280 --> 00:11:56.720
or here's our style guide. All sorts of things&nbsp;
like that to just make Claude's life a bit easier.&nbsp;&nbsp;

00:11:56.720 --> 00:12:03.360
And you can build these things up over time.&nbsp;
The other thing you can do, which is important,&nbsp;&nbsp;

00:12:03.360 --> 00:12:07.840
is permission management. When you're running&nbsp;
Cloud Code, there's all sorts of different kind&nbsp;&nbsp;

00:12:07.840 --> 00:12:13.840
of permission things flying by. Kind of out of the&nbsp;
box, what happens when you start our tool is for&nbsp;&nbsp;

00:12:13.840 --> 00:12:20.800
read actions. If Claude is searching or reading,&nbsp;
we just let it go. But once it starts writing or&nbsp;&nbsp;

00:12:20.800 --> 00:12:26.400
running bash commands or doing things that could&nbsp;
change change stuff on your machine potentially,&nbsp;&nbsp;

00:12:26.400 --> 00:12:33.040
that's when we kick in this UI and it says&nbsp;
something like yes, yes, always allow this or no,&nbsp;&nbsp;

00:12:33.040 --> 00:12:38.880
um, I want to do something else. And using that&nbsp;
permission management and being smart about it&nbsp;&nbsp;

00:12:38.880 --> 00:12:43.520
can help you work faster. So there's something&nbsp;
called autoaccept mode where if you're working&nbsp;&nbsp;

00:12:43.520 --> 00:12:48.800
with cloud code and you press shift tab, claude&nbsp;
will just start working. There's things you can&nbsp;&nbsp;

00:12:48.800 --> 00:12:54.960
do like you can configure claude in the settings&nbsp;
where specific commands like on bash like if you&nbsp;&nbsp;

00:12:54.960 --> 00:13:01.360
just are like tired of saying yes run npm run test&nbsp;
you can just always approve that. So fiddling with&nbsp;&nbsp;

00:13:01.360 --> 00:13:08.000
your permission management is a great way to kind&nbsp;
of speed up your workflow integration setup. So,&nbsp;&nbsp;

00:13:08.000 --> 00:13:12.880
one thing that is going to help you get the most&nbsp;
out of cloud code is remember that it's great at&nbsp;&nbsp;

00:13:12.880 --> 00:13:18.480
the terminal. And if there's applications that&nbsp;
you use which have kind of a way to access them&nbsp;&nbsp;

00:13:18.480 --> 00:13:23.840
through CLI and GitHub is a great example of&nbsp;
that. They have a powerful tool called GH you&nbsp;&nbsp;

00:13:23.840 --> 00:13:29.680
can basically give more work to cloud code and&nbsp;
you can do that either by just installing more&nbsp;&nbsp;

00:13:29.680 --> 00:13:37.440
CLI tools or you can attach more MCP servers. Um,&nbsp;
I would say just through experience that if you're&nbsp;&nbsp;

00:13:37.440 --> 00:13:43.200
using something like um, a CLI tool that's well&nbsp;
known and well documented and you're trying to&nbsp;&nbsp;

00:13:43.200 --> 00:13:48.960
choose between the CLI tool and just installing&nbsp;
it on your machine and grabbing an MCP server,&nbsp;&nbsp;

00:13:48.960 --> 00:13:56.320
I would recommend using the CLI tool. Um, and&nbsp;
then also if you internally have your own tools&nbsp;&nbsp;

00:13:56.320 --> 00:14:01.120
at Anthropic, we have something called coup that&nbsp;
does a whole bunch of stuff for us. You can also&nbsp;&nbsp;

00:14:01.120 --> 00:14:07.200
tell Claude about that and you pro that's the sort&nbsp;
of thing you'd put in claude.mmd and then context&nbsp;&nbsp;

00:14:07.200 --> 00:14:13.440
management. So remember that claude is an agent&nbsp;
and when it's an a what what it does it's calls&nbsp;&nbsp;

00:14:13.440 --> 00:14:19.360
these tools and the context builds up and up over&nbsp;
time and at least for anthropic our models have a&nbsp;&nbsp;

00:14:19.360 --> 00:14:24.960
context window of 200,000 tokens and you can max&nbsp;
this thing out. So you kind of have two options&nbsp;&nbsp;

00:14:24.960 --> 00:14:29.440
when you're in a long session with claude and&nbsp;
you're working and you're going back and forth.&nbsp;&nbsp;

00:14:29.440 --> 00:14:33.280
You'll see in the bottom right you'll start to&nbsp;
get this little warning that'll say hey you're&nbsp;&nbsp;

00:14:33.280 --> 00:14:38.000
starting to fill up the context window and kind of&nbsp;
depending on what's going on you have two options.&nbsp;&nbsp;

00:14:38.000 --> 00:14:43.120
You can run slashcle and just start over and that&nbsp;
clears everything out except for for instance&nbsp;&nbsp;

00:14:43.120 --> 00:14:50.480
claw.mmd or you can run slash compact and what'll&nbsp;
happen is basically it's like a user message is&nbsp;&nbsp;

00:14:50.480 --> 00:14:55.120
inserted and it just says something like hey&nbsp;
I need to go summarize everything we've been&nbsp;&nbsp;

00:14:55.120 --> 00:14:59.520
up to. I'm going to give this to another developer&nbsp;
and they're going to pick up where I left off. And&nbsp;&nbsp;

00:14:59.520 --> 00:15:04.240
then that summary is what kind of seeds the next&nbsp;
session. You can go from there. We spend a lot of&nbsp;&nbsp;

00:15:04.240 --> 00:15:09.440
time tuning this kind of compact functionality&nbsp;
so that as you max out the context window and&nbsp;&nbsp;

00:15:09.440 --> 00:15:16.480
then run compact, you can start back over and&nbsp;
keep going efficient workflows. What can you do&nbsp;&nbsp;

00:15:16.480 --> 00:15:22.320
with cloud code? And how do you get the most out?&nbsp;
So using planning and to-dos. talked a little bit&nbsp;&nbsp;

00:15:22.320 --> 00:15:26.800
about this before, but one of the best things you&nbsp;
can do is when you open up Cloud Code, instead of&nbsp;&nbsp;

00:15:26.800 --> 00:15:32.480
saying, "Hey, I need you to fix this bug," you can&nbsp;
say, "Hey, I have this bug. Can you search around,&nbsp;&nbsp;

00:15:32.480 --> 00:15:36.880
figure out what's causing it, and just like tell&nbsp;
me a plan how we're going to fix it?" And this can&nbsp;&nbsp;

00:15:36.880 --> 00:15:41.760
save you a lot of time because you can verify,&nbsp;
you can read Claude's plan, and you can verify&nbsp;&nbsp;

00:15:41.760 --> 00:15:46.960
what it's going to do. And then the other thing&nbsp;
that we have is we have this to-do list feature.&nbsp;&nbsp;

00:15:46.960 --> 00:15:52.560
So often when Claude's working on a big task,&nbsp;
it'll create a to-do list. And if you're kind of&nbsp;&nbsp;

00:15:52.560 --> 00:15:57.360
paying attention, you can kind of watch this to-do&nbsp;
list, and if you see anything kind of weirder in&nbsp;&nbsp;

00:15:57.360 --> 00:16:01.280
there or something that doesn't make sense, that's&nbsp;
when you can press escape and say, "Hey Claude,&nbsp;&nbsp;

00:16:01.280 --> 00:16:06.800
let's change the to-do list. I think you're&nbsp;
on the wrong path." Smart vibe coding. So it's&nbsp;&nbsp;

00:16:06.800 --> 00:16:11.520
very tempting and it's very powerful to just let&nbsp;
Claude work and press enter and see what happens&nbsp;&nbsp;

00:16:11.520 --> 00:16:16.080
at the end. I think there's a few things that can&nbsp;
help make this better. And there's I think a talk&nbsp;&nbsp;

00:16:16.080 --> 00:16:22.480
later today about just this for 30 minutes. But&nbsp;
doing things like having test-driven development,&nbsp;&nbsp;

00:16:22.480 --> 00:16:28.000
having Claude make small changes, run the tests,&nbsp;
make sure they pass, always having Claude do&nbsp;&nbsp;

00:16:28.000 --> 00:16:33.200
things like check the TypeScript and the linting,&nbsp;
and then commit regularly so that if it's kind of&nbsp;&nbsp;

00:16:33.200 --> 00:16:39.120
going off the rails, you can always fall back and&nbsp;
try again. You can use screenshots to guide and&nbsp;&nbsp;

00:16:39.120 --> 00:16:44.400
debug. So Claude is built on top of our models&nbsp;
which are multimodal. You can always just grab&nbsp;&nbsp;

00:16:44.400 --> 00:16:49.040
a screenshot, paste it in, or if you have a file&nbsp;
somewhere that's an image, you can just say, "Hey,&nbsp;&nbsp;

00:16:49.040 --> 00:16:56.560
Claude, look at this mock.png and then build the&nbsp;
website for me or whatever." And then advanced&nbsp;&nbsp;

00:16:56.560 --> 00:17:02.240
techniques. So, as you're getting used to using&nbsp;
Claude, what are some things you can think about&nbsp;&nbsp;

00:17:02.240 --> 00:17:07.360
uh to kind of push things to the next level? And&nbsp;
one of the things we see both internally and with&nbsp;&nbsp;

00:17:07.360 --> 00:17:12.960
customers is when you've started to use this tool&nbsp;
for a while, it's going to be very tempting to use&nbsp;&nbsp;

00:17:12.960 --> 00:17:18.640
multiple clouds at once. And so I know people at&nbsp;
Anthropic and a few customers that run four clouds&nbsp;&nbsp;

00:17:18.640 --> 00:17:24.560
at the same time. There's various ways to do this.&nbsp;
You can have it in T-Mox or just different tabs,&nbsp;&nbsp;

00:17:24.560 --> 00:17:30.000
all sorts of crazy things. So I would challenge&nbsp;
you to try getting multiple clubs running at once&nbsp;&nbsp;

00:17:30.000 --> 00:17:35.120
and kind of be orchestrating all these things.&nbsp;
It's quite fun. I can only do two, but I know&nbsp;&nbsp;

00:17:35.120 --> 00:17:42.240
people that do four. Use escape. So, escape&nbsp;
is your best friend. While Claude is working,&nbsp;&nbsp;

00:17:42.240 --> 00:17:47.360
you can kind of keep an eye on what it's up to,&nbsp;
and you can press escape to stop it and interject&nbsp;&nbsp;

00:17:47.360 --> 00:17:52.000
and say, "Hey, I think you're going on the wrong&nbsp;
path, or I want you to do something else." Knowing&nbsp;&nbsp;

00:17:52.000 --> 00:17:56.960
when the right time to press escape is versus&nbsp;
just letting Claude figure it out, is key to&nbsp;&nbsp;

00:17:56.960 --> 00:18:01.280
getting the most out of the tool. And there's a&nbsp;
hidden feature. Not too many people know about it,&nbsp;&nbsp;

00:18:01.280 --> 00:18:06.080
but if you press escape twice, you can actually&nbsp;
jump back in your conversation. You can go back&nbsp;&nbsp;

00:18:06.080 --> 00:18:13.520
and you can kind of reset tool expansion in MCP.&nbsp;
So, this is taking it to the next level. If you&nbsp;&nbsp;

00:18:13.520 --> 00:18:19.200
feel like with bash and with the tools that cloud&nbsp;
has that it still can't do something, this is&nbsp;&nbsp;

00:18:19.200 --> 00:18:24.560
when you should start looking at MCP servers. And&nbsp;
then headless automation. And I think this is the&nbsp;&nbsp;

00:18:24.560 --> 00:18:30.000
thing we're most excited about, but also we are&nbsp;
still trying to wrap our heads around internally,&nbsp;&nbsp;

00:18:30.000 --> 00:18:35.920
which is how can we use Claude programmatically.&nbsp;
We have that in GitHub actions. We want to figure&nbsp;&nbsp;

00:18:35.920 --> 00:18:42.560
out other creative places we can start using&nbsp;
it. I would challenge you all to do the same.&nbsp;&nbsp;

00:18:43.440 --> 00:18:48.960
So, with that said, uh I'm going to jump over&nbsp;
to my computer because there's one other best&nbsp;&nbsp;

00:18:48.960 --> 00:18:55.440
practice, which is it's always good to stay on&nbsp;
top of everything that's new. So, we're shipping&nbsp;&nbsp;

00:18:55.440 --> 00:19:01.680
super fast. I'm going to throw I'm just going to&nbsp;
go over a few things that are new as of today. Um,&nbsp;&nbsp;

00:19:01.680 --> 00:19:06.880
one thing is when you're in Cloud Now and you fire&nbsp;
it up, you can do slashmodel. You can see what&nbsp;&nbsp;

00:19:06.880 --> 00:19:12.080
model you're running on. I'm on default, which&nbsp;
happens to be Sonnet. We can jump over to Opus.&nbsp;&nbsp;

00:19:12.080 --> 00:19:20.160
You can do the same thing in slashconfig. Switch&nbsp;
it here. So that's new. Make sure you're running&nbsp;&nbsp;

00:19:20.160 --> 00:19:25.600
the model that works for you. There's another&nbsp;
thing that's new about these models which is&nbsp;&nbsp;

00:19:25.600 --> 00:19:32.320
you can say something like um can you figure out&nbsp;
what's in this project? And for a long time for a&nbsp;&nbsp;

00:19:32.320 --> 00:19:39.200
while we've had this like think hard or extended&nbsp;
thinking. Now this is great but with our past&nbsp;&nbsp;

00:19:39.200 --> 00:19:44.000
models the we wouldn't let our model think between&nbsp;
tool calls and that's probably when the thinking&nbsp;&nbsp;

00:19:44.000 --> 00:19:49.680
matters most. So starting with cloud 4 they can&nbsp;
now our models now think between tool calls and&nbsp;&nbsp;

00:19:49.680 --> 00:19:53.680
we can watch this happen. So we have Claude in&nbsp;
this project. There's a few different files in&nbsp;&nbsp;

00:19:53.680 --> 00:19:58.640
here and I'm just going to tell it to think hard&nbsp;
and figure out what's in this project and we can&nbsp;&nbsp;

00:19:58.640 --> 00:20:03.200
watch Claude start to work. And so the way you&nbsp;
know you triggered thinking is you'll see kind&nbsp;&nbsp;

00:20:03.200 --> 00:20:08.480
of this lighter gray text and then it'll call&nbsp;
some file, it'll call some tools, it'll read&nbsp;&nbsp;

00:20:08.480 --> 00:20:14.480
some stuff, and then we see some more thinking.&nbsp;
And this is awesome. Um, so I encourage you when&nbsp;&nbsp;

00:20:14.480 --> 00:20:20.880
you're working on tasks and solving bugs, throw&nbsp;
a think hard in there. And then the other thing,&nbsp;&nbsp;

00:20:20.880 --> 00:20:27.360
and you know what, we'll just throw it up real&nbsp;
quick, is I have this in VS Code, but of course&nbsp;&nbsp;

00:20:27.360 --> 00:20:33.440
this is in Jet Brains as well, but we have these&nbsp;
new great integrations with VS Code and and Jet&nbsp;&nbsp;

00:20:33.440 --> 00:20:41.920
Brains. Um, we can do things like Claude's going&nbsp;
to know what file I'm in. What file am I in?

00:20:41.920 --> 00:20:43.200
That is not what I meant to say,&nbsp;&nbsp;

00:20:43.200 --> 00:20:48.480
but Claude's going to figure it out.&nbsp;
And you can do things like this.

00:20:58.320 --> 00:21:03.600
So these are the sort of things I would&nbsp;
encourage you to stay on top of. We have a public&nbsp;&nbsp;

00:21:03.600 --> 00:21:08.800
uh kind of GitHub project called Claude Code&nbsp;
under Enthropic. You can post issues there,&nbsp;&nbsp;

00:21:08.800 --> 00:21:14.000
but we also post our change log there. And so I&nbsp;
check this once a week and make sure that I'm on&nbsp;&nbsp;

00:21:14.000 --> 00:21:19.120
top of all the new stuff we're shipping because&nbsp;
even I can't keep up with it. So, with that said,&nbsp;&nbsp;

00:21:19.120 --> 00:21:23.280
we have like four minutes left. I'm happy to&nbsp;
answer questions about anything cloud code&nbsp;&nbsp;

00:21:23.280 --> 00:21:33.280
related. We have it here. I can live demo some&nbsp;
stuff if you're interested. Um, let's do a few.

00:21:33.280 --> 00:21:40.160
Thanks. Real quick, this might be obvious, but&nbsp;
multiple cloud MD files in a project. I presume&nbsp;&nbsp;

00:21:40.160 --> 00:21:46.160
that's possible and it just figures it out or no?&nbsp;
So, there's a few options, of course, like in the&nbsp;&nbsp;

00:21:46.160 --> 00:21:57.200
same directory. You couldn't um but you could have&nbsp;
one here and one in a subdirectory. And I think we&nbsp;&nbsp;

00:21:57.200 --> 00:22:02.080
changed this so that all the subdirectory ones&nbsp;
aren't read in because like Anthropic, we have a&nbsp;&nbsp;

00:22:02.080 --> 00:22:08.160
monor repo and people would open it at the top and&nbsp;
blow up their context with all the claud MDs. So,&nbsp;&nbsp;

00:22:08.160 --> 00:22:15.520
we encourage Claude when it's searching around and&nbsp;
it discovers claw.md files in um child directories&nbsp;&nbsp;

00:22:15.520 --> 00:22:21.520
that are relevant to be sure to read them. But by&nbsp;
default, it just reads the cloud MD file in the&nbsp;&nbsp;

00:22:21.520 --> 00:22:25.920
current working directory when you fire it up.&nbsp;
And then also you can set one in like your home&nbsp;&nbsp;

00:22:25.920 --> 00:22:31.840
directory. Um there are things you can do though.&nbsp;
We have this new thing like in your cloud MD you&nbsp;&nbsp;

00:22:31.840 --> 00:22:39.040
can start referencing other files. So you could&nbsp;
for instance um do something like this with an&nbsp;&nbsp;

00:22:39.040 --> 00:22:45.200
at sign um if you have other cloud MD files that&nbsp;
you just kind of know you always want to read in&nbsp;&nbsp;

00:22:45.200 --> 00:22:54.080
um to do something like that. Hi. Okay. I um have&nbsp;
not had luck getting Claude to respect my Claude&nbsp;&nbsp;

00:22:54.080 --> 00:22:59.200
MD. Like there's one thing particular. Yes. where&nbsp;
I'll ask it to refactor something and then it&nbsp;&nbsp;

00:22:59.200 --> 00:23:04.080
will leave inline comments explaining the like the&nbsp;
what of it is and it's like like something that's&nbsp;&nbsp;

00:23:04.080 --> 00:23:09.760
extremely obvious and so I'll tell it like go and&nbsp;
remove any inline comments that describe the what&nbsp;&nbsp;

00:23:09.760 --> 00:23:13.680
of what's happening and then it will remove it&nbsp;
and then immediately do it again and like the same&nbsp;&nbsp;

00:23:13.680 --> 00:23:18.560
pass. So do you have any strategies for dealing&nbsp;
with that? So there's kind of two things that&nbsp;&nbsp;

00:23:18.560 --> 00:23:22.720
fix that. So that was actually kind of a model&nbsp;
problem. There's nothing in the prompt. We have&nbsp;&nbsp;

00:23:22.720 --> 00:23:28.080
actually a lot in the prompt for 37 that said,&nbsp;
"Whoa, do not leave comments." And despite that,&nbsp;&nbsp;

00:23:28.080 --> 00:23:32.480
the model just loves to leave comments. Um, so it&nbsp;
doesn't surprise me that your cloud MD didn't help&nbsp;&nbsp;

00:23:32.480 --> 00:23:37.680
much either. We already did a lot I did a lot of&nbsp;
work to try to tamp it down from what happens out&nbsp;&nbsp;

00:23:37.680 --> 00:23:45.360
of the box. So we mostly fixed that in Cloud 4.&nbsp;
Now there might be some new weird behavior quirks,&nbsp;&nbsp;

00:23:45.360 --> 00:23:49.600
but the other thing we made better in Cloud 4&nbsp;
is it's just better at following instructions.&nbsp;&nbsp;

00:23:49.600 --> 00:23:54.720
Um, and we've gotten a lot of feedback from&nbsp;
early testers that, uh, all of a sudden, whoa,&nbsp;&nbsp;

00:23:54.720 --> 00:23:59.840
my cloud MD is being followed way more closely.&nbsp;
Um, and it might be a good chance to go look in&nbsp;&nbsp;

00:23:59.840 --> 00:24:05.120
your CloudMD and decide, do I still need this&nbsp;
stuff? Maybe I can take some of it out. Maybe&nbsp;&nbsp;

00:24:05.120 --> 00:24:09.360
I need to add a few new things. So, moving&nbsp;
over to the new models might be a good time&nbsp;&nbsp;

00:24:09.360 --> 00:24:15.200
to take another look at what's in there and&nbsp;
see what you need and what maybe can go. Uh,&nbsp;&nbsp;

00:24:15.200 --> 00:24:19.200
for the record, I'm trying to think of something&nbsp;
that you might not have thought of. We're doing&nbsp;&nbsp;

00:24:19.200 --> 00:24:24.240
multi- aent execution and parallelization.&nbsp;
Can you make it so that for four agents,&nbsp;&nbsp;

00:24:24.240 --> 00:24:30.160
say agents two and three use the context from&nbsp;
agent one, maybe agent four uses the context from&nbsp;&nbsp;

00:24:30.160 --> 00:24:37.440
agent two at a certain point. Yeah. Um yeah,&nbsp;
etc. That's interesting. We're trying to So,&nbsp;&nbsp;

00:24:37.440 --> 00:24:39.920
kind of like I said at the beginning, we're&nbsp;
trying to do the simple thing that works,&nbsp;&nbsp;

00:24:39.920 --> 00:24:45.760
which is just one agent that's great at coding&nbsp;
and does everything. Um I think we want to figure&nbsp;&nbsp;

00:24:45.760 --> 00:24:50.880
that out. Probably what's going to happen is if&nbsp;
you wanted to do that, you would ask all your&nbsp;&nbsp;

00:24:50.880 --> 00:24:55.760
agents to probably like write to a shared markdown&nbsp;
file or something like that so they can all kind&nbsp;&nbsp;

00:24:55.760 --> 00:25:01.200
of like check in and communicate. Um, sometimes&nbsp;
like I'll be working with cloud.md or claude and&nbsp;&nbsp;

00:25:01.200 --> 00:25:06.400
I'll just say like, "Hey, I need you to write some&nbsp;
stuff in like ticket.md for another developer and&nbsp;&nbsp;

00:25:06.400 --> 00:25:11.280
then I'll fire up another cloud code and I'll be&nbsp;
like, hey, read ticket.md like another developer&nbsp;&nbsp;

00:25:11.280 --> 00:25:15.520
left this note for you. Like this is what you're&nbsp;
going to work on." So, I would think about trying&nbsp;&nbsp;

00:25:15.520 --> 00:25:20.240
to write that state to a file and then just kind&nbsp;
of like count on the model's ability to just like&nbsp;&nbsp;

00:25:20.240 --> 00:25:26.720
read files and make sense them um is probably the&nbsp;
best you can do today. And maybe we'll figure out&nbsp;&nbsp;

00:25:26.720 --> 00:25:36.960
clever ways to expose that uh in the product as&nbsp;
something more native. Cool. All right. And with&nbsp;&nbsp;

00:25:36.960 --> 00:25:42.480
that said, I have some rare clawed code stickers&nbsp;
that I found in my backpack. So, come find me.&nbsp;&nbsp;

00:25:42.480 --> 00:25:49.941
I'll be hanging out over there or something.&nbsp;
Um, happy to share them. Thank you. [Applause]

